#!/usr/bin/env python3

import json
import locale
import sys


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  max_sales = {"total_sales": 0}
  #year_count = {} # logic error - was trying to count pop year - this is year most appearing in data
  sales_count = {}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    sales = item["total_sales"]
    item_revenue = sales * item_price
    if item_revenue > max_revenue["revenue"]: # find item with max revenue
      item["revenue"] = item_revenue
      max_revenue = item
    # also handle max sales
    if item["total_sales"] > max_sales["total_sales"]:
      max_sales = item # after I found a way with max() below
    # also handle most popular car_year
    year = item["car"]["car_year"]
    if year in sales_count: # calc most pop year
      #year_count[year] += 1 # trying to calc pop year, but this way is wrong - was right if was the year most times appearing
      sales_count[year] += sales
    else:
      #year_count[year] = 1
      sales_count[year] = sales

  # sales_count has the total number of sales at each year
  popular_year = max(sales_count, key=sales_count.get)

  # max_sales with max
  max_sales_with_max = max(data, key=lambda x: x['total_sales'])

  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The {} had the most sales: {}".format(
      format_car(max_sales["car"]), max_sales["total_sales"]),
    "Calc with max -> The {} had the most sales: {}".format(
      format_car(max_sales_with_max["car"]), max_sales_with_max["total_sales"]),
    "The most popular year was {} with {} sales.".format(
      popular_year, sales_count[popular_year]),
  ]

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  for s in summary:
    print(s)
  # TODO: turn this into a PDF report

  # TODO: send the PDF report as an email attachment


if __name__ == "__main__":
  main(sys.argv)
